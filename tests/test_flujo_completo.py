"""
üß™ TEST FLUJO COMPLETO BARBARA
Prueba el flujo exacto que quiere el usuario incluyendo correo
"""

import requests
import json
import time

def test_flujo_completo_correo():
    """Prueba el flujo conversacional completo con correo"""
    
    base_url = "http://localhost:5000/test-chat"
    headers = {"Content-Type": "application/json"}
    phone = "+51999FLUJO"
    
    # Secuencia de prueba COMPLETA
    conversacion = [
        ("hola", "‚úÖ Saludo inicial"),
        ("Pedro", "‚úÖ Captura nombre"),
        ("si cotizar", "‚úÖ Confirma cotizaci√≥n"),
        ("auto", "‚úÖ Especifica veh√≠culo"),
        ("2023", "‚úÖ Especifica a√±o"),
        ("particular", "‚úÖ Especifica uso"),
        ("Lima", "‚úÖ Especifica ciudad + genera cotizaci√≥n"),
        ("si mandalo", "‚úÖ Confirma env√≠o por correo"),
        ("pedro123@gmail.com", "‚úÖ Proporciona correo")
    ]
    
    print("üß™ PROBANDO FLUJO COMPLETO CON CORREO")
    print("=" * 60)
    
    for i, (mensaje, descripcion) in enumerate(conversacion, 1):
        try:
            # Enviar mensaje
            payload = {"message": mensaje, "phone": phone}
            response = requests.post(base_url, headers=headers, json=payload)
            
            if response.status_code == 200:
                data = response.json()
                bot_response = data.get("bot_response", "Sin respuesta")
                
                print(f"\n{i}. Usuario: '{mensaje}'")
                print(f"   {descripcion}")
                
                # Mostrar respuesta de Barbara (truncada)
                if len(bot_response) > 150:
                    print(f"   Barbara: '{bot_response[:150]}...'")
                else:
                    print(f"   Barbara: '{bot_response}'")
                
                # Verificaciones espec√≠ficas
                if i == 7:  # Despu√©s de Lima
                    if "correo electr√≥nico" in bot_response.lower():
                        print("   üéØ ¬°PERFECTO! Pregunta por correo autom√°ticamente")
                    else:
                        print("   ‚ùå ERROR: No pregunta por correo")
                        
                elif i == 8:  # Despu√©s de confirmar correo
                    if "correo electr√≥nico" in bot_response.lower() or "@" in bot_response:
                        print("   ‚úÖ Solicita direcci√≥n de correo")
                    else:
                        print("   ‚ùå ERROR: No solicita correo espec√≠fico")
                        
                elif i == 9:  # Despu√©s de dar correo
                    if "enviado" in bot_response.lower() or "bandeja" in bot_response.lower():
                        print("   üéâ ¬°√âXITO! Confirma env√≠o por correo")
                    else:
                        print("   ‚ùå ERROR: No confirma env√≠o")
                
            else:
                print(f"   ‚ùå Error HTTP: {response.status_code}")
                break
                
            time.sleep(0.8)  # Pausa realista
            
        except Exception as e:
            print(f"   ‚ùå Error: {e}")
            break
    
    print("\n" + "=" * 60)
    print("üß™ PRUEBA FLUJO COMPLETO TERMINADA")

if __name__ == "__main__":
    test_flujo_completo_correo() 