"""
üß™ TEST FLUJO EMAIL REAL MAILTRAP
Prueba espec√≠fica para verificar env√≠o real de emails con Mailtrap
"""

import requests
import json
import time

def test_flujo_email_mailtrap():
    """Prueba flujo completo con env√≠o real de email via Mailtrap"""
    
    base_url = "http://localhost:5000/test-chat"
    headers = {"Content-Type": "application/json"}
    phone = "+51999EMAIL"  # Tel√©fono √∫nico para esta prueba
    
    print("üß™ PROBANDO FLUJO COMPLETO CON MAILTRAP REAL")
    print("=" * 60)
    
    # Secuencia paso a paso manteniendo contexto
    steps = [
        ("hola", "Saludo inicial"),
        ("Roberto", "Proporcionar nombre"),
        ("quiero cotizar", "Solicitar cotizaci√≥n"),
        ("auto", "Tipo de veh√≠culo"),
        ("2022", "A√±o del veh√≠culo"),
        ("particular", "Uso del veh√≠culo"),
        ("Lima", "Ciudad del veh√≠culo"),
        ("si mandalo", "Confirmar env√≠o por correo"),
        ("roberto.test@gmail.com", "Proporcionar correo - ENV√çO REAL")
    ]
    
    for i, (mensaje, descripcion) in enumerate(steps, 1):
        try:
            print(f"\n{i}. üë§ Usuario: '{mensaje}'")
            print(f"   üìù {descripcion}")
            
            # Enviar mensaje (siempre el mismo tel√©fono)
            payload = {"message": mensaje, "phone": phone}
            response = requests.post(base_url, headers=headers, json=payload)
            
            if response.status_code == 200:
                data = response.json()
                bot_response = data.get("bot_response", "Sin respuesta")
                
                # Mostrar respuesta completa para debug
                print(f"   ü§ñ Barbara: '{bot_response[:200]}...' " if len(bot_response) > 200 else f"   ü§ñ Barbara: '{bot_response}'")
                
                # Verificaciones espec√≠ficas por paso
                if i == 7:  # Despu√©s de Lima - deber√≠a generar cotizaci√≥n + preguntar por correo
                    if "correo electr√≥nico" in bot_response.lower():
                        print("   ‚úÖ CORRECTO: Pregunta por correo despu√©s de cotizaci√≥n")
                    else:
                        print("   ‚ùå ERROR: No pregunta por correo")
                        
                elif i == 8:  # Despu√©s de "si mandalo" - deber√≠a pedir correo espec√≠fico
                    if "correo electr√≥nico" in bot_response.lower() or "email" in bot_response.lower():
                        print("   ‚úÖ CORRECTO: Pide correo espec√≠fico")
                    else:
                        print("   ‚ùå ERROR: No pide correo espec√≠fico")
                        
                elif i == 9:  # Despu√©s del correo - ENV√çO REAL
                    if "‚úÖ" in bot_response and "enviado" in bot_response.lower():
                        print("   üéâ ¬°√âXITO! EMAIL ENVIADO REALMENTE VIA MAILTRAP")
                        print("   üìß Verifica tu bandeja de entrada en roberto.test@gmail.com")
                    elif "problema" in bot_response.lower() or "error" in bot_response.lower():
                        print("   ‚ö†Ô∏è ERROR EN ENV√çO: Mailtrap report√≥ fallo")
                    else:
                        print("   ‚ùå RESPUESTA INESPERADA")
                
            else:
                print(f"   ‚ùå Error HTTP: {response.status_code}")
                break
                
            # Pausa entre mensajes
            time.sleep(1.2)
            
        except Exception as e:
            print(f"   ‚ùå Error: {e}")
            break
    
    print("\n" + "=" * 60)
    print("üß™ PRUEBA MAILTRAP TERMINADA")
    print("üìß Si ves '‚úÖ EMAIL ENVIADO', verifica tu correo real!")

if __name__ == "__main__":
    test_flujo_email_mailtrap() 